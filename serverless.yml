service: pizzaria-orders-service

frameworkVersion: '3'

plugins:
  - serverless-offline

provider:
  name: aws
  runtime: nodejs18.x
  memorySize: 128
  region: 'us-east-1'
  timeout: 30
  iam:
    role: !Sub arn:aws:iam::${AWS::AccountId}:role/LabRole
    # role:
    #   statements:
    #     - Effect: Allow
    #       Action: 's3:*'
    #       Resource: '*'
          
    #     - Effect: Allow
    #       Action:
    #         - 'sqs:*'
    #       Resource: '*'

    #     - Effect: Allow
    #       Action:
    #         - 'lambda:*'
    #       Resource: '*'

    #     - Effect: Allow
    #       Action:
    #         - 'dynamodb:PutItem'
    #       Resource: '*'
  environment:
    QUEUE_BASE_URL: https://sqs.${aws:region}.amazonaws.com/${aws:accountId}
    ORDES_TABLE_NAME: 'pedidos-pizzaria'

package:
  exclude:
    - node_modules/**

layers:
  LayerDependencies:
    path: node_modules

functions:
  router:
    handler: src/handlers/router.handler
    events:
      - s3:
          bucket: orders-pizzaria
          event: s3:ObjectCreated:*
          rules:
            - prefix: pronto/
          existing: true
      - s3:
          bucket: orders-pizzaria
          event: s3:ObjectCreated:*
          rules:
            - prefix: em-preparacao/
          existing: true
    layers:
      - {Ref: LayerDependenciesLambdaLayer}
  preparation:
    handler: src/handlers/preparation.handler
    events:
      - sqs:
          arn:
            Fn::Join:
              - ':'
              - - 'arn:aws:sqs'
                - Ref: AWS::Region
                - Ref: AWS::AccountId
                - 'em-preparacao-pizzaria'
          batchSize: 1
    layers:
      - {Ref: LayerDependenciesLambdaLayer}
  ready:
    handler: src/handlers/ready.handler
    events:
      - sqs:
          arn:
            Fn::Join:
              - ':'
              - - 'arn:aws:sqs'
                - Ref: AWS::Region
                - Ref: AWS::AccountId
                - 'pronto-pizzaria'
          batchSize: 1
    layers:
      - {Ref: LayerDependenciesLambdaLayer}